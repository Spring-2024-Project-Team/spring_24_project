#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>
#include <unistd.h>

int main(void) {
  int input;
  printf("1. Timer 2.To-do-List");
  scanf("%d", &input);
  if (input == 1) {

    time_t rawtime;
    struct tm *info;
    setenv("TZ", "GMT+4", 1); // changes time zone to eastern standard time
                              // (changed it to +4 due to daylight savings time)
    tzset();                  // sets time zone

    time(&rawtime);
    info = localtime(
        &rawtime); // takes local time from user and puts it into a struct
    printf("Current local time and date: %s", asctime(info));

    // take in user input for time
    int hour, minute, seconds;
    printf("What time would you like to stop studying?\n");
    scanf("%d %d %d", &hour, &minute, &seconds);

    // makes sure all of the inputs are valid
    if ((hour < 24 && hour > 0) && (minute > -1 && minute < 60) &&
        (seconds > -1 && seconds < 60)) {

      // retake the time so that the current time is accurate
      time(&rawtime);
      info = localtime(&rawtime);
      printf("Updated time: %d:%d:%d\n", info->tm_hour, info->tm_min,
             info->tm_sec); // print current time

      // calculate the difference between end time and current time
      // make the calulcations into seconds
      int newTime = 0;
      newTime = 60 * 60 * (hour - info->tm_hour); // hrs to seconds
      newTime += 60 * (minute - info->tm_min);    // minutes to seconds
      newTime += (seconds - info->tm_sec);

      // use sleep function until that amount of time has passed
      sleep(newTime);
      printf(
          "Timer done!"); // when that amount of time has passed, timer is done

    }

    else
      printf("You entered invalid time format");
  }

  // to-do list
  if (input == 2) {
  }

  return 0;

  // menu 1.add task 2.complete 3.view 4.quit
  // add fucntion
  // take in string, add to 2d array
  // complete function
  // scratch out string, but keep the text
  printf("What would you like to do?\n");
  printf("1. Add task\n 2. View\n 3. Complete\n 4. Quit\n");

  /*
  To-Do list:
    Subtract/Add from list
    Scratch line through finished task
    Add/Remove from list
  */
}
